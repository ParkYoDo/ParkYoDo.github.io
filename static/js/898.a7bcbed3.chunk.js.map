{"version":3,"file":"static/js/898.a7bcbed3.chunk.js","mappings":"+KAqFA,SAASA,EAAT,GAAmC,IAAdC,EAAa,EAAbA,IAEjB,GAF8B,EAARC,OAEAC,EAAAA,EAAAA,UAAS,KAA/B,eAAKC,EAAL,KAAWC,EAAX,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAIC,YAAW,WAAKH,EAAQ,MAAO,GAAE,KACzC,OAAO,WACHI,aAAaF,GACbF,EAAQ,GACX,CACJ,GAAE,CAACJ,KAEI,gBAAKS,UAAW,SAAWN,EAA3B,SACH,EAAC,uDAAiB,uDAAiB,6DAAkBH,IAE7D,CAED,UA/FA,SAAiBU,GAEb,IAAKC,GAAMC,EAAAA,EAAAA,MAAND,GACDE,EAAWH,EAAMT,MAAMa,MAAK,SAACC,GAAD,OAAOA,EAAEJ,IAAIA,CAAb,IAChC,GAAwBT,EAAAA,EAAAA,UAAS,GAAjC,eAAKc,EAAL,KAAYC,EAAZ,KACA,GAAoBf,EAAAA,EAAAA,UAAS,IAA7B,eAAKgB,EAAL,KACA,GADA,MACoBhB,EAAAA,EAAAA,UAAS,IAA7B,eAAKF,EAAL,KAAUmB,EAAV,KACA,GAAwBjB,EAAAA,EAAAA,UAAS,IAAjC,eAAKkB,EAAL,KAAYC,EAAZ,KACIC,GAAWC,EAAAA,EAAAA,MAEXC,IADMC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,IAAjB,KACPC,EAAAA,EAAAA,OA4Bf,OA1BAvB,EAAAA,EAAAA,YAAW,WACP,IAAIwB,EAAUC,aAAaC,QAAQ,YACnCF,EAAUG,KAAKC,MAAMJ,IACbK,KAAKrB,EAASF,IACtBkB,EAAU,IAAIM,IAAIN,GAClBA,EAAUO,MAAMC,KAAKR,GACrBC,aAAaQ,QAAQ,UAAWN,KAAKO,UAAUV,GAElD,GAAE,KAEHxB,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAIC,YAAY,WAAQU,EAAS,EAAI,GAAE,KAM3C,OALAI,EAAS,OAKD,WACJb,aAAaF,GACbe,EAAS,GAEZ,CACJ,GAAE,CAACH,KAKA,gBAAKT,UAAW,SAAWW,EAA3B,UACA,iBAAKX,UAAU,YAAf,UAEe,GAAPO,GAAW,gBAAKwB,MAAO,CAACC,gBAAgB,SAAUC,MAAO,OAA9C,iGAAgF,MAE/F,iBAAKjC,UAAU,MAAf,WACI,gBAAKA,UAAU,WAAf,UACA,gBAAKkC,IAAK,6CAA8C9B,EAASF,GAAG,GAAI,OAAQiC,MAAM,YAGtF,iBAAKnC,UAAU,WAAf,WACA,eAAIA,UAAU,OAAd,SAAsBI,EAASgC,SAC/B,uBAAIhC,EAASiC,WACb,yBAAIjC,EAASkC,MAAb,aACA,mBAAQC,QAAU,WACdxB,GAASyB,EAAAA,EAAAA,IAAS,CAACtC,GAAKE,EAASF,GAAIuC,KAAOrC,EAASgC,MAAO7B,MAAQ,OAAQM,EAAS,QAAS,EAC9Fb,UAAU,iBAFd,uCAGA,mBAAQuC,QAAU,WAAO1B,GAAU,EAAG,EAAEb,UAAU,iBAAlD,8CAIJ,UAAC,IAAD,CAAK0C,QAAQ,OAAQC,iBAAiB,QAAtC,WACI,SAAC,SAAD,WACI,SAAC,SAAD,CAAUJ,QAAS,WAAO7B,EAAO,EAAG,EAAEkC,SAAS,QAA/C,yCAEJ,SAAC,SAAD,WACI,SAAC,SAAD,CAAUL,QAAS,WAAO7B,EAAO,EAAG,EAAEkC,SAAS,QAA/C,yCAEJ,SAAC,SAAD,WACI,SAAC,SAAD,CAAUL,QAAS,WAAO7B,EAAO,EAAG,EAAEkC,SAAS,QAA/C,kDAGR,SAACtD,EAAD,CAAYE,MAAOS,EAAMT,MAAOD,IAAKA,QAKhD,C","sources":["\broutes/Detail.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {Nav} from \"react-bootstrap\";\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PlusCart } from \"../store.js\";\n\nfunction Detail (props) {\n\n    let {id} = useParams();\n    let finditem = props.shoes.find((x) => x.id==id);\n    let [count, setcount] = useState(0);\n    let [num, setNum] = useState('');\n    let [tab, setTab] = useState(0);\n    let [fade2, setFade2] = useState('');\n    let navigate = useNavigate();\n    let cart =useSelector((state) => state.cart)\n    let dispatch = useDispatch();\n\n    useEffect( () => {\n        let outdata = localStorage.getItem('watched')\n        outdata = JSON.parse(outdata)\n        outdata.push(finditem.id)\n        outdata = new Set(outdata)\n        outdata = Array.from(outdata)\n        localStorage.setItem('watched', JSON.stringify(outdata))\n\n    }, [])\n\n    useEffect(() => {\n        let a = setTimeout( () => {{setcount(1)}}, 2000);\n        setFade2('end')\n        // if(isNaN(num) == true) {\n        //     alert('숫자를 입력하세요');\n        // }\n        // useEffect가 실행되기 전에 실행 됨\n        return (() => {\n            clearTimeout(a);\n            setFade2('')\n            //clean up function은 mount시 실행x, unmount시 실행o\n        })\n    }, [num]) \n    // []를 써주면 mount할떄만 실행됨 ,안쓰면 update랑 mount 둘다 실행 \n    // 안에 변수 넣어주면 그 변수값이 변할 때만 실행\n\n    return (\n        <div className={\"start \" + fade2}>\n        <div className=\"container\">\n            {\n                count==0 ? <div style={{backgroundColor:'yellow', color: 'red'}}>2초 이내 구매 시 할인해드립니다</div>: null\n            }\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                <img src={\"https://codingapple1.github.io/shop/shoes\" +(finditem.id+1)+ \".jpg\"} width=\"100%\" />\n                </div>\n                {/* <input onChange={(e)=>{ setNum(e.target.value) }}/> */}\n                <div className=\"col-md-6\">\n                <h4 className=\"pt-5\">{finditem.title}</h4>\n                <p>{finditem.content}</p>\n                <p>{finditem.price}원</p>\n                <button onClick={ () => {\n                    dispatch(PlusCart({id : finditem.id, name : finditem.title, count : '1'})); navigate('/cart')}} \n                    className=\"btn btn-danger\">주문하기</button> \n                <button onClick={ () => {navigate(-1)}} className=\"btn btn-danger\">뒤로 가기</button>\n                </div>\n            </div>\n\n            <Nav variant=\"tabs\"  defaultActiveKey=\"link0\">\n                <Nav.Item>\n                    <Nav.Link onClick={() => {setTab(0)}} eventKey=\"link0\">상품정보</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link onClick={() => {setTab(1)}} eventKey=\"link1\">배송정보</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link onClick={() => {setTab(2)}} eventKey=\"link2\">판매자정보</Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <TabContent shoes={props.shoes} tab={tab}/>\n\n        </div> \n        </div>\n    )\n}\n\nfunction TabContent({tab, shoes}) {\n\n    let [fade, setFade] = useState('');\n    \n    useEffect(() => {\n        let a = setTimeout(()=>{setFade('end')}, 100)\n        return () => {\n            clearTimeout(a)\n            setFade('')\n        }\n    }, [tab])\n\n    return (<div className={'start ' + fade}>\n        {[<div>상품정보</div>, <div>배송정보</div>, <div>판매자정보</div>][tab] }\n        </div>)\n}\n\nexport default Detail;"],"names":["TabContent","tab","shoes","useState","fade","setFade","useEffect","a","setTimeout","clearTimeout","className","props","id","useParams","finditem","find","x","count","setcount","num","setTab","fade2","setFade2","navigate","useNavigate","dispatch","useSelector","state","cart","useDispatch","outdata","localStorage","getItem","JSON","parse","push","Set","Array","from","setItem","stringify","style","backgroundColor","color","src","width","title","content","price","onClick","PlusCart","name","variant","defaultActiveKey","eventKey"],"sourceRoot":""}